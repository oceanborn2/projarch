<?xml version="1.0" encoding="iso-8859-1"?>

<!--

   $Id: typespecs.xml,v 1.7 2002/04/14 20:53:24 pascal Exp $

   $Log: typespecs.xml,v $
   Revision 1.7  2002/04/14 20:53:24  pascal
   Added primary and foreign key types. Todo : work out how to implement them

   Revision 1.6  2001/12/14 22:18:24  pascal
   Added comments, hacked cvs

   Revision 1.6  2001/12/11 22:36:31  pascal
   Hacked CVS to get the history back

   Revision 1.5  2001/12/09 23:41:05  pascal
   *** empty log message ***

   Revision 1.4  2001/12/08 18:27:02  pascal
   Changed subpackage name from 'datatypes' to 'lang' for the sake of clarity and correctness

   Revision 1.3  2001/12/07 22:26:29  pascal

   $Author: pascal $

   This file belongs to the 'Project Architect' and is released under the GNU General Public License (GPL)

   Copyright (C) Pascal Munerot

-->

<!-- This file is used by the code generation system to help with data types computations -->

<datatypes>

	<!-- List of equivalences -->
	<equivs>
	  <equiv name="common"/>
	  <equiv name="java"/>
	  <equiv name="sql"/>
	</equivs>

	<!-- LOGICAL VALUES -->
	<datatype name="BOOLEAN">
		<node equiv="common" signed="no" bytesize="1"/>
		<node equiv="java"   primitive="boolean" object="Boolean" imports="java.lang.Boolean"/>
		<node equiv="sql"    subeq="postgres"  datatype="BOOL"/>
	</datatype>

	<!-- NUMERIC VALUES - UNSIGNED - INTEGER -->
	<datatype name="BYTE">
		<node equiv="common" signed="no" bytesize="1"/>
		<node equiv="java"   primitive="byte" object="Byte" imports="java.lang.Byte"/>
		<node equiv="sql"    subeq="postgres"  datatype="CHAR"/>
	</datatype>

	<datatype name="WORD">
		<node equiv="common" signed="no" bytesize="2"/>
		<node equiv="java"   primitive="short" object="Short" imports="java.lang.Short"/>
		<node equiv="sql"    subeq="postgres"   datatype="INT2"/>
	</datatype>

	<!-- NUMERIC VALUES - SIGNED - INTEGER -->
	<datatype name="SHORT">
		<node equiv="common" signed="yes" bytesize="2"/>
		<node equiv="java"   primitive="short" object="Short" imports="java.lang.Short"/>
		<node equiv="sql"    subeq="postgres" datatype="INT2"/>
	</datatype>

	<datatype name="INT">
		<node equiv="common" signed="yes" bytesize="4"/>
		<node equiv="java"   primitive="int" object="Integer" imports="java.lang.Integer"/>
		<node equiv="sql"    subeq="postgres" datatype="INTEGER"/>
	</datatype>

	<datatype name="BIGINT">
		<node equiv="common" signed="yes" bytesize="?"/>
		<node equiv="java"   primitive="int" object="BigInteger" imports="java.lang.BigInteger"/>
		<node equiv="sql"    subeq="postgres" datatype="INT8"/>
	</datatype>

 	<!-- NUMERIC VALUES - SIGNED - PRECISION -->
	<datatype name="NUMERIC">
		<node equiv="common" signed="yes" defaultsize="8"  defaultprec="2" bytesize="?"/>
		<node equiv="java"   primitive="double" object="Double" imports="java.lang.Double"/>
		<node equiv="sql"    subeq="postgres" datatype="NUMERIC(%SZ,%PR)" />
	</datatype>

	<datatype name="BIGDEC">
		<node equiv="common" signed="yes" defaultsize="16" defaultprec="4" bytesize="?"/>
		<node equiv="java"   primitive="" object="BigDecimal" imports="java.lang.BigDecimal"/>
		<node equiv="sql"    subeq="postgres" datatype="NUMERIC(%SZ,%PR)"/>
	</datatype>

	<datatype name="FLOAT">
		<node equiv="common" signed="yes" bytesize="8"/>
		<node equiv="java"   primitive="float" object="Float" imports="java.lang.Float"/>
		<node equiv="sql"    subeq="postgres" datatype="FLOAT"/>
	</datatype>

	<datatype name="MEDIUMFLOAT">
		<node equiv="common" signed="yes" bytesize="4"/>
		<node equiv="java"   primitive="float" object="Float" imports="java.lang.Float"/>
		<node equiv="sql"    subeq="postgres" datatype="FLOAT4"/>
	</datatype>

	<!-- STRING TYPES -->
	<datatype name="STRING">
		<node equiv="common" defaultsize="20"/>
		<node equiv="java"   primitive="char [%SZ]" object="String" imports="java.lang.String"/>
		<node equiv="sql"    subeq="postgres" datatype="VARCHAR(%SZ)"/>
	</datatype>

	<!-- TEXT is a postgres type capable of storing text without specifying a maximum limit -->
	<datatype name="MEMO">
		<node equiv="common" defaultsize="1024"/>
		<node equiv="java"   primitive="char [%SZ]" object="String" imports="java.lang.String"/>
		<node equiv="sql"    subeq="postgres" datatype="TEXT"/>
	</datatype>


	<!-- DATE AND DURATION TYPES -->
	<datatype name="DATE">
		<node equiv="common" signed="" bytesize=""/>
		<node equiv="java"   primitive="double" object="Date" imports="java.util.Date"/>
		<node equiv="sql"    subeq="postgres" datatype="DATE"/>
	</datatype>

	<datatype name="TIME">
		<node equiv="common" signed="" bytesize=""/>
		<node equiv="java"   primitive="double" object="Date" imports="java.util.Date"/>
		<node equiv="sql"    subeq="postgres" datatype="TIME"/>
	</datatype>

	<datatype name="DURATION">
		<node equiv="common" signed="" bytesize=""/>
		<node equiv="java"   primitive="double" object="Date" imports="java.util.Date"/>
		<node equiv="sql"    subeq="postgres" datatype="INTERVAL"/>
	</datatype>

	<datatype name="TIMESTAMP">
		<node equiv="common" signed="" bytesize=""/>
		<node equiv="java"   primitive="double" object="Date" imports="java.util.Date"/>
		<node equiv="sql"    subeq="postgres" datatype="TIMESTAMP"/>
	</datatype>

	<!-- DATABASE TYPES -->

	<!-- This type refers to an id created by a sequence object. It is not the sequence generator in itself -->
	<!-- It will help with the generation of new ids -->

	<datatype name="SEQUENCE">
		<node equiv="common" signed="no" bytesize="8" nullable="no"/>
		<node equiv="java"   primitive="int" object="Integer" imports="java.lang.Integer"/>
		<node equiv="sql"    subeq="postgres" datatype="INT8"/>
	</datatype>

	<!-- An object id, equivalent to PostgreSQL OID or Oracle's rowId -->
	<datatype name="OID">
		<node equiv="common" signed="no" bytesize="8" nullable="no"/>
		<node equiv="java"   primitive="int" object="Integer" imports="java.lang.Integer"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>

	<!-- ADVANCED TYPES - PROVIDED BY THE FRAMEWORK -->
	<datatype name="PRIMARY_KEY">
		<node equiv="common" signed="no" bytesize=""/>
		<node equiv="java"   object="ForeignKey" imports="ops.frm.dbms.ForeignKey"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>

	<datatype name="FOREIGN_KEY">
		<node equiv="common" signed="no" bytesize=""/>
		<node equiv="java"   object="ForeignKey" imports="ops.frm.dbms.ForeignKey"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>

	<datatype name="VALUE_DOMAIN">
		<node equiv="common" signed="no" bytesize=""/>
		<node equiv="java"   object="ValueDomain" imports="ops.frm.valuedomains.ValueDomain"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>

	<datatype name="COLLECTION">
		<node equiv="common" signed="no" bytesize=""/>
		<node equiv="java"   primitive="%CT [%SZ]" object="Vector" imports="java.util.Vector"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>

	<datatype name="HASHMAP">
		<node equiv="common" signed="no" bytesize=""/>
		<node equiv="java"   object="Hashtable" imports="java.util.Hashtable"/>
		<node equiv="sql"    subeq="postgres" datatype="OID" disable_nulls="yes"/>
	</datatype>


	<excludeimports>
	  <import>java.lang</import>
	</excludeimports>

</datatypes>









